{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Catalina\\\\Documents\\\\GitHub\\\\Ansiedapp\\\\comprenXible_React\\\\src\\\\components\\\\questionnaire\\\\Questionnaire.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Questionnaire.css';\nimport Modals from '../modals/Modals.js';\nimport { useHistory } from 'react-router-dom'; //PENDIENTE:\n//Si el usuario pulsa el boton de atras del navegador, para saltar a la pestana anterior, hay que hacer saltar un mensaje que diga que, si abandona la pagina, perdera los resultados de su test.\n//Localhost sobre el que guardar la seleccion de respuestas.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question() {\n  _s();\n\n  //El hook useHistory te da acceso a la instancia del historial que puedes usar para navegar.\n  //Debemos importar el hook useHistory, inicializar su funcion (const history = useHistory()), y en la funcion Next(), utilizar history.push('/testresult') para pushear dicha url al historial y lanzarnos a dicho componente.\n  const history = useHistory();\n  const [questionListCount, setquestionListCount] = useState(0); //Como la progress bar hará 8 movimientos, aumentará un 12.5% por cada uno para llegar al 100%\n\n  const [progressBarStatus, moveProgressBar] = useState(12.5);\n  const [choosedOptionIndex, setchoosedOptionIndex] = useState(0);\n  let choosedOption = [];\n  let questionList = [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"has sentido poco inter\\xE9s o placer en hacer cosas?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"te has sentido deca\\xEDdo/deca\\xEDda, deprimido/deprimida o sin esperanzas?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"te has sentido ansioso/a alterado/a?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"no has podido dejar de preocuparte?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"te has preocupado excesivamente por diferentes cosas?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"has tenido dificultad para relajarte?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"te has sentido tan intranquilo/intranquila que no pod\\xEDas estarte quieto/quieta?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"te has irritado o enfadado con facilidad?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"has sentido miedo, como si fuera a suceder algo terrible?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)];\n  useEffect(() => {\n    // if (questionListCount !== 0) {\n    console.log(\"Updatear bdbdd\"); // }\n  }, [questionListCount]);\n\n  function resetForm() {\n    var ele = document.getElementsByName(\"option\");\n\n    for (var i = 0; i < ele.length; i++) ele[i].checked = false;\n  }\n\n  function next(questionListCount) {\n    if (questionListCount < 8) {\n      //Si ul usuario ha elegido una opcion y da a siguiente, anade esa opcion elegida (A, B, C, o D) al array choosedOption.\n      document.querySelectorAll('input[type=\"radio\"]').forEach(elemnt => {\n        if (elemnt.checked) {\n          console.log(choosedOption);\n          choosedOption[choosedOptionIndex] = elemnt.value;\n          console.log(choosedOption);\n        }\n      }); // setchoosedOptionIndex(questionList + 1);\n\n      setquestionListCount(questionListCount + 1);\n      moveProgressBar(progressBarStatus + 12.5); //Resetea el formulario al pulsar en siguiente\n\n      document.querySelector('progress').value = +20;\n      resetForm();\n    } else {\n      //Esto me lanza al componente TestResult, cuando pulsa en siguiente y no hay mas preguntas.\n      //PENDIENTE, HAY QUE HACER SALTO A BERTA, ANTES DE IR AL FINAL\n      history.push('/testresult');\n    }\n  }\n\n  function back() {\n    setquestionListCount(questionListCount - 1);\n    moveProgressBar(progressBarStatus - 12.5);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionSection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Modals, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionText\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Durante las \\xFAltimas 2 semanas, \\xBFcon qu\\xE9 frecuencia... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: questionList[questionListCount]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"optionCheck\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"optionA\",\n            name: \"option\",\n            value: \"A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"optionA\",\n            children: \" Ningun d\\xEDa.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"optionB\",\n            name: \"option\",\n            value: \"B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"optionB\",\n            children: \" Menos de 7 d\\xEDas.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"optionC\",\n            name: \"option\",\n            value: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"optionC\",\n            children: \" M\\xE1s de 7 d\\xEDas.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"optionD\",\n            name: \"option\",\n            value: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"optionD\",\n            children: \" Casi todos los d\\xEDas.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Mira que barrita:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          max: \"100\",\n          value: progressBarStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionButtons\",\n        children: [questionListCount > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button--bgTransparent-white\",\n          onClick: () => back(),\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 144\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button--bgTransparent-white\",\n          onClick: () => next(questionListCount),\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this) //guardar dato, cambiar dato, comprobar si esta guardado en el array, si esta guardado pintarlo\n  ;\n}\n\n_s(Question, \"Hh3Py2OLYz6XO33uXMzoLQ43tEw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Question;\nexport default Question; //PREGUNTAS\n// Preguntas: \n// Durante las últimas 2 semanas, ¿con qué frecuencia... \n// has sentido poco interés o placer en hacer cosas?\n// te has sentido decaído/decaída, deprimido/deprimida o sin esperanzas?\n// te has sentido ansioso/a alterado/a?\n// no has podido dejar de preocuparte?\n// te has preocupado excesivamente por diferentes cosas?\n// has tenido dificultad para relajarte?\n// te has sentido tan intranquilo/intranquila que no podías estarte quieto/quieta?\n// te has irritado o enfadado con facilidad?\n// has sentido miedo, como si fuera a suceder algo terrible?\n// Respuestas:\n// Ningun día \n// menos de 7 días \n// Mas de 7 dias\n// Casi todos los días\n//Plantilla de Erlantz\n// import React, { useState } from 'react';\n// function Counter() {\n//     let initialValue = <p>hola mundo</p>;\n// \tconst [count, setCount] = useState(initialValue);\n//     let adios = <p>Adios mundo</p>\n// \treturn (\n// \t\t<div>\n// \t\t\t<h2>This is a counter using hooks</h2>\n// \t\t\t<h1>{count}</h1>\n// \t\t\t<button onClick={() => setCount( adios )}>Click to Increment</button>\n// \t\t</div>\n// \t);\n// }\n// export default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/Catalina/Documents/GitHub/Ansiedapp/comprenXible_React/src/components/questionnaire/Questionnaire.js"],"names":["React","useEffect","useState","Modals","useHistory","Question","history","questionListCount","setquestionListCount","progressBarStatus","moveProgressBar","choosedOptionIndex","setchoosedOptionIndex","choosedOption","questionList","console","log","resetForm","ele","document","getElementsByName","i","length","checked","next","querySelectorAll","forEach","elemnt","value","querySelector","push","back"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Questionnaire.css';\r\nimport Modals from '../modals/Modals.js';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//PENDIENTE:\r\n//Si el usuario pulsa el boton de atras del navegador, para saltar a la pestana anterior, hay que hacer saltar un mensaje que diga que, si abandona la pagina, perdera los resultados de su test.\r\n//Localhost sobre el que guardar la seleccion de respuestas.\r\n\r\n\r\nfunction Question() {\r\n\r\n    //El hook useHistory te da acceso a la instancia del historial que puedes usar para navegar.\r\n    //Debemos importar el hook useHistory, inicializar su funcion (const history = useHistory()), y en la funcion Next(), utilizar history.push('/testresult') para pushear dicha url al historial y lanzarnos a dicho componente.\r\n    const history = useHistory();\r\n\r\n    const [questionListCount, setquestionListCount] = useState(0);\r\n\r\n    //Como la progress bar hará 8 movimientos, aumentará un 12.5% por cada uno para llegar al 100%\r\n    const [progressBarStatus, moveProgressBar] = useState(12.5);\r\n\r\n    const [choosedOptionIndex, setchoosedOptionIndex] = useState(0);\r\n\r\n\r\n\r\n    let choosedOption = [];\r\n\r\n    let questionList = [<p>has sentido poco interés o placer en hacer cosas?</p>,\r\n    <p>te has sentido decaído/decaída, deprimido/deprimida o sin esperanzas?</p>,\r\n    <p>te has sentido ansioso/a alterado/a?</p>,\r\n    <p>no has podido dejar de preocuparte?</p>,\r\n    <p>te has preocupado excesivamente por diferentes cosas?</p>,\r\n    <p>has tenido dificultad para relajarte?</p>,\r\n    <p>te has sentido tan intranquilo/intranquila que no podías estarte quieto/quieta?</p>,\r\n    <p>te has irritado o enfadado con facilidad?</p>,\r\n    <p>has sentido miedo, como si fuera a suceder algo terrible?</p>];\r\n\r\n    useEffect(() => {\r\n        // if (questionListCount !== 0) {\r\n        console.log(\"Updatear bdbdd\");\r\n        // }\r\n    }, [questionListCount])\r\n\r\n    function resetForm() {\r\n        var ele = document.getElementsByName(\"option\");\r\n        for (var i = 0; i < ele.length; i++)\r\n            ele[i].checked = false;\r\n    }\r\n\r\n\r\n\r\n    function next(questionListCount) {\r\n        if (questionListCount < 8) {\r\n            //Si ul usuario ha elegido una opcion y da a siguiente, anade esa opcion elegida (A, B, C, o D) al array choosedOption.\r\n\r\n            document.querySelectorAll('input[type=\"radio\"]').forEach((elemnt) => {\r\n                if (elemnt.checked) {\r\n                    console.log(choosedOption);\r\n                    choosedOption[choosedOptionIndex] = elemnt.value;\r\n                    console.log(choosedOption);\r\n                }\r\n            })\r\n\r\n            // setchoosedOptionIndex(questionList + 1);\r\n            setquestionListCount(questionListCount + 1)\r\n            moveProgressBar(progressBarStatus + 12.5);\r\n\r\n            //Resetea el formulario al pulsar en siguiente\r\n            document.querySelector('progress').value = +20;\r\n            resetForm();\r\n        }\r\n        else {\r\n            //Esto me lanza al componente TestResult, cuando pulsa en siguiente y no hay mas preguntas.\r\n            //PENDIENTE, HAY QUE HACER SALTO A BERTA, ANTES DE IR AL FINAL\r\n            history.push('/testresult');\r\n        }\r\n    }\r\n\r\n    function back() {\r\n        setquestionListCount(questionListCount - 1);\r\n        moveProgressBar(progressBarStatus - 12.5);\r\n    }\r\n\r\n    return (\r\n        <div className=\"questionSection\">\r\n            <div className=\"wrapper\">\r\n                <Modals />\r\n                <div className=\"questionText\">\r\n                    <h5>Durante las últimas 2 semanas, ¿con qué frecuencia... </h5>\r\n                    <h4>{questionList[questionListCount]}</h4>\r\n                    <form action=\"optionCheck\">\r\n                        <input type=\"radio\" id=\"optionA\" name=\"option\" value=\"A\" />\r\n                        <label htmlFor=\"optionA\"> Ningun día.</label><br></br>\r\n                        <input type=\"radio\" id=\"optionB\" name=\"option\" value=\"B\" />\r\n                        <label htmlFor=\"optionB\"> Menos de 7 días.</label><br></br>\r\n                        <input type=\"radio\" id=\"optionC\" name=\"option\" value=\"C\" />\r\n                        <label htmlFor=\"optionC\"> Más de 7 días.</label><br></br>\r\n                        <input type=\"radio\" id=\"optionD\" name=\"option\" value=\"D\" />\r\n                        <label htmlFor=\"optionD\"> Casi todos los días.</label><br></br>\r\n                    </form>\r\n                    <p>Mira que barrita:</p>\r\n                    <progress max=\"100\" value={progressBarStatus}></progress>\r\n                </div>\r\n                <div className=\"questionButtons\">\r\n                    {/* Esto es una condicion ternaria (condición ? expr1 : expr2 ), es un atajo de un If en javascript */}\r\n                    {questionListCount > 0 ? <button className=\"button button--bgTransparent-white\" onClick={() => back()}>Anterior</button> : <span></span>}\r\n                    <button className=\"button button--bgTransparent-white\" onClick={() => next(questionListCount)}>Siguiente</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        //guardar dato, cambiar dato, comprobar si esta guardado en el array, si esta guardado pintarlo\r\n    );\r\n}\r\n\r\nexport default Question;\r\n\r\n\r\n\r\n//PREGUNTAS\r\n// Preguntas: \r\n\r\n// Durante las últimas 2 semanas, ¿con qué frecuencia... \r\n// has sentido poco interés o placer en hacer cosas?\r\n// te has sentido decaído/decaída, deprimido/deprimida o sin esperanzas?\r\n// te has sentido ansioso/a alterado/a?\r\n// no has podido dejar de preocuparte?\r\n// te has preocupado excesivamente por diferentes cosas?\r\n// has tenido dificultad para relajarte?\r\n// te has sentido tan intranquilo/intranquila que no podías estarte quieto/quieta?\r\n// te has irritado o enfadado con facilidad?\r\n// has sentido miedo, como si fuera a suceder algo terrible?\r\n\r\n// Respuestas:\r\n\r\n// Ningun día \r\n// menos de 7 días \r\n// Mas de 7 dias\r\n// Casi todos los días\r\n\r\n\r\n\r\n\r\n\r\n//Plantilla de Erlantz\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// function Counter() {\r\n//     let initialValue = <p>hola mundo</p>;\r\n// \tconst [count, setCount] = useState(initialValue);\r\n//     let adios = <p>Adios mundo</p>\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t<h2>This is a counter using hooks</h2>\r\n// \t\t\t<h1>{count}</h1>\r\n// \t\t\t<button onClick={() => setCount( adios )}>Click to Increment</button>\r\n// \t\t</div>\r\n// \t);\r\n// }\r\n\r\n// export default Counter;"]},"metadata":{},"sourceType":"module"}